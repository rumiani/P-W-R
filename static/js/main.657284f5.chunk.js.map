{"version":3,"sources":["components/Header/ChangeHandle/ChangeHandle.tsx","components/Header/Input/Input.tsx","components/Header/Button/Button.tsx","components/Header/LookUp/LookUp.tsx","components/Header/Header.tsx","components/Main/Error/Error.tsx","components/Main/NoResult/NoResult.tsx","components/Main/Result/Definitions/Definition/Definitioin.tsx","components/Main/Result/Definitions/Example/Example.tsx","components/Main/Result/Definitions/Photo/Photo.tsx","components/Main/Result/Definitions/Type/Type.tsx","components/Main/Result/Definitions/Emoji/Emoji.tsx","components/Main/Result/Definitions/Definitions.tsx","components/Main/Result/Pronunciation/Pronunciation.tsx","components/Main/Result/Tooltip/Tooltip.tsx","components/Main/Result/CliclLookub/CliclLookub.tsx","components/Main/Result/Result.tsx","components/Main/Spinner/Spinner.tsx","components/Main/Welcome/Welcome.tsx","components/Main/Main.tsx","App.tsx","Reducer/RootReducer.tsx","index.tsx"],"names":["changeHandle","props","setInput","document","querySelector","value","setNoResult","connect","state","welcome","input","getData","result","loading","noResult","err","dispatch","setWelcome","type","setGetData","setResult","setLoading","setErr","onKeyUp","event","key","LookUp","onChange","placeholder","Button","className","onClick","title","focus","fetch","headers","Authorization","then","res","json","message","catch","Error","googleLookUp","href","target","rel","Definition","parse","definition","Example","example","picUrl","word","src","url","alt","Type","Emoji","emoji","definitions","map","vocab","index","image_url","pronunciation","Tooltip","id","cliclLookub","selectedText","left","top","tooltipBtn","getElementById","getSelection","getRangeAt","toString","replace","length","changedTouches","pageX","pageY","console","log","style","display","data-testid","onMouseUp","onTouchEnd","Spinner","Welcome","App","initState","RootReducer","action","store","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.657284f5.chunk.js","sourcesContent":["const changeHandle = (props:any):void=>{\r\n    props.setInput(document.querySelector('input')?.value)\r\n    props.setNoResult(false);  \r\n} \r\nexport default changeHandle;","import { connect } from \"react-redux\"\r\n\r\nconst Input = (props:any)=>{\r\n  \r\n    return (\r\n        <input \r\n          type = \"text\"  \r\n          onKeyUp = {(event):void=>event.key === \"Enter\" && props.LookUp()} //keyCode is Deprecated\r\n          onChange = {()=>props.changeHandle()} placeholder = 'Enter a word ...'\r\n          // value={props.input}\r\n        />\r\n    )\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    \r\n  return {\r\n      welcome : state.welcome,\r\n      input : state.input,\r\n      getData : state.getData,\r\n      result : state.result,\r\n      loading : state.loading,\r\n      noResult : state.noResult,\r\n      err : state.err,\r\n  }\r\n}\r\n\r\nconst mapDispatchProps = (dispatch:any) => {\r\n  return {\r\n      setWelcome : (welcome:string) => dispatch({type:'WELCOME',welcome}),\r\n      setInput : (input:string) => dispatch({type:'INPUT',input}),\r\n      setGetData : (getData:boolean) => dispatch({type:'GET_DATA',getData}),\r\n      setResult : (result:string) =>dispatch({type:'RESULT',result}),\r\n      setLoading : (loading:boolean) => dispatch({type:'LOADING',loading}),\r\n      setNoResult : (noResult:boolean) => dispatch({type:'NO_RESULT',noResult}),\r\n      setErr : (err:boolean) => dispatch({type:'ERR',err})\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchProps)(Input);\r\n","const Button = (props:any) => {\r\n    return(\r\n        <button className='goBtn' onClick = {props.LookUp} title='Look it up'>\r\n            <p className='goBtn_text'>Go</p>\r\n        </button>\r\n    )\r\n}\r\nexport default Button","import {ResultObj} from '../../../Interfaces/Interfaces';\r\n\r\nconst url = 'https://owlbot.info/api/v4/dictionary/'\r\nconst Token = \"Token b1921c221f0ed059edc2e3af4c2613885e1c80fe\"\r\n\r\nconst LookUp = (props:any)=>{    \r\n    if(props.input==='') return document.querySelector('input')!.focus();\r\n    document.querySelector('input')!.value =props.input;\r\n    props.setWelcome(false);\r\n    props.setLoading(true);\r\n    props.setGetData(false)\r\n    props.setNoResult(false);\r\n    props.setErr(false);\r\n    //Here I fetch the data from the API /////////////////\r\n      fetch(url+props.input, {\r\n        headers: {\r\n          Authorization: Token\r\n        }\r\n      })\r\n      .then(res =>  res.json()\r\n        )\r\n        .then((result:ResultObj[]):void=> {          \r\n          props.setResult(result)        \r\n          props.setGetData(true)\r\n          props.setLoading(false)\r\n          props.setNoResult(false)\r\n      if(result[0]?.message === 'No definition :('){        \r\n        props.setGetData(false)\r\n        props.setLoading(false)\r\n        props.setNoResult(true)\r\n      }\r\n    }\r\n    )\r\n    .catch((err)=>{      \r\n      props.setErr(true)\r\n      props.setGetData(false)\r\n      props.setLoading(false)\r\n      props.setNoResult(false)\r\n      props.setErr(true)\r\n    })\r\n  } \r\n\r\nexport default LookUp;","import './Header.css';\r\nimport { connect } from 'react-redux';\r\nimport changeHandle from './ChangeHandle/ChangeHandle';\r\nimport Input from './Input/Input';\r\nimport Button from './Button/Button';\r\nimport LookUp from './LookUp/LookUp';\r\n\r\ntype Props = {\r\n    getData:boolean;\r\n    input:string;\r\n}\r\nconst Header :React.FC <Props>= (props:any)=>{\r\n\r\n    return (\r\n        <div className = 'header'>\r\n          <Input \r\n            changeHandle={()=>changeHandle(props)}\r\n            LookUp={()=>LookUp(props)}\r\n            // input = {props.input}\r\n            />\r\n          <Button \r\n            LookUp={()=>LookUp(props)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {  \r\n    \r\n    return {\r\n        welcome : state.welcome,\r\n        input : state.input,\r\n        getData : state.getData,\r\n        result : state.result,\r\n        loading : state.loading,\r\n        noResult : state.noResult,\r\n        err : state.err,\r\n    }\r\n  }\r\n\r\nconst mapDispatchProps = (dispatch:any) => {\r\n    return {\r\n        setWelcome : (welcome:string) => dispatch({type:'WELCOME',welcome}),\r\n        setInput : (input:string) => dispatch({type:'INPUT',input}),\r\n        setGetData : (getData:boolean) => dispatch({type:'GET_DATA',getData}),\r\n        setResult : (result:string) =>dispatch({type:'RESULT',result}),\r\n        setLoading : (loading:boolean) => dispatch({type:'LOADING',loading}),\r\n        setNoResult : (noResult:boolean) => dispatch({type:'NO_RESULT',noResult}),\r\n        setErr : (err:boolean) => dispatch({type:'ERR',err})\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchProps)(Header);","import './Error.css'\r\nconst Error = () => {\r\n    return (\r\n        <div className='error'>\r\n            Opps! Something went wrong, please check your internet connection or try again later.\r\n        </div>\r\n    )\r\n}\r\nexport default Error;","import { connect } from 'react-redux'\r\nimport './NoResult.css'\r\nconst NoResult = (props:any) => {\r\n    const googleLookUp = `https://www.google.com/search?q=${props.input}+meaning&rlz=1C1CHBF_enIR879IR879&sxsrf=AOaemvJ0mR6Q_uzLqmUsRNhNYIxd7KKRag%3A1632479977002&ei=6KpNYdq-PIGE9u8P3KS-kA8&oq=man+meanin&gs_lcp=Cgdnd3Mtd2l6EAxKBAhBGABQAFgAYLVEaABwAXgAgAEAiAEAkgEAmAEA&sclient=gws-wiz&ved=0ahUKEwja0obptZfzAhUBgv0HHVySD_IQ4dUDCA4`\r\n\r\n    return (\r\n            <div className='noResult'>\r\n                <div>\r\n                        Sorry we couln't find any results for the word: \"{props.input}\". <br />\r\n                <a href={googleLookUp} target='_blank' rel=\"noreferrer\">\r\n                        You may look it up here </a>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state:any) => {  \r\n        return {\r\n                input : state.input,\r\n        }\r\n}\r\nconst mapDispatchProps = (dispatch:any) => {\r\nreturn {\r\n        setInput : (input:string) => dispatch({type:'INPUT',input})\r\n}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchProps)(NoResult);\r\n      \r\n    \r\n","import './Definition.css'\r\nimport parse from 'html-react-parser';\r\n\r\nconst Definition = (props:any) => {\r\n    return (\r\n        <div className='definition'>\r\n            <span className='definition_row'> definition</span>\r\n            <span className='definition_result'><strong>-</strong> {parse(props.definition)} </span>\r\n        </div> \r\n    )\r\n}\r\nexport default Definition;","import './Example.css'\r\nimport parse from 'html-react-parser';\r\nconst Example = (props:any) => {\r\n    return (\r\n        <div className = 'example'> \r\n            <span className='example_row'>Example</span>\r\n            <span className='example_result'><strong>-</strong> {parse(props.example)}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Example;\r\n","import { connect } from 'react-redux';\r\nimport './Photo.css'\r\nconst Photo = (props:any) => {    \r\n    const picUrl:string = `https://www.google.com/search?q=${props.word}&tbm=isch&sxsrf=ALeKk037CG3UAeAPXBwJ5-Vpq_tnYvVj6A%3A1626383806124&source=hp&biw=1366&bih=625&ei=vqXwYNrFBMPQ-gTEspSgBw&oq=lamp&gs_lcp=CgNpbWcQAzIECCMQJzIFCAAQsQMyBQgAELEDMgUIABCxAzIFCAAQsQMyBQgAELEDMgIIADICCAAyBQgAELEDMgUIABCxAzoICAAQsQMQgwFQ_B9YwyZgsytoAHAAeACAAbwCiAHFCZIBBTItMS4zmAEAoAEBqgELZ3dzLXdpei1pbWc&sclient=img&ved=0ahUKEwjanJ7o_-XxAhVDqJ4KHUQZBXQQ4dUDCAc&uact=5`;\r\n \r\n    return (\r\n        <div className = 'photo'>\r\n            <span className='photo_row'>Image</span>\r\n            <span className='photo_result' title={`See more pictures of ${props.word}`}>\r\n                <a href = {picUrl} target = '_blank' rel=\"noreferrer\" > \r\n                    <img className='photo'  src={props.url} alt = {'A ' + props.word + ' pic'} />\r\n                </a>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    return {\r\n        result: state.result,\r\n        welcome: state.welcome,\r\n        input : state.input,\r\n        loading:state.loading,\r\n        getData : state.getData,\r\n        noResult:state.noResult,\r\n        err:state.err,\r\n    }\r\n  }\r\n  const mapDispatchProps = (dispatch:any) => {\r\n    return {\r\n      setWelcome : (welcome:boolean) => dispatch({type:'WELCOME',welcome}),\r\n      setGetData : (getData:boolean) => dispatch({type:'GET_DATA',getData}),\r\n      setInput : (input:string) => dispatch({type:'INPUT',input}),\r\n      setResult : (result:string) =>dispatch({type:'RESULT',result}),\r\n      setLoading : (loading:boolean) => dispatch({type:'LOADING',loading}),\r\n      setNoResult : (noResult:boolean) => dispatch({type:'NO_RESULT',noResult}),\r\n      setErr : (err:boolean) => dispatch({type:'ERR',err})\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchProps)(Photo);\r\n","import './Type.css'\r\nconst Type = (props:any) => {\r\n    return (\r\n        <div className = 'type'> \r\n            <span className='type_row'>Type</span>\r\n            <span className='type_result'>{props.type}</span>\r\n        </div>\r\n    )\r\n}\r\nexport default Type;\r\n","import './Emoji.css'\r\nconst Emoji = (props:any) => {\r\n    const picUrl:string = `https://www.google.com/search?q=${props.word}+emoji&tbm=isch&ved=2ahUKEwiSvamVxKrzAhUTjxoKHT5WDDYQ2-cCegQIABAA&oq=umbrella+imoj&gs_lcp=CgNpbWcQARgAMgYIABAKEBg6BAgAEEM6BQgAEIAEOgQIABAYUMsPWKskYPcvaABwAHgAgAHSA4gB6guSAQcyLTQuMC4xmAEAoAEBqgELZ3dzLXdpei1pbWfAAQE&sclient=img&ei=FrBXYZLaOpOear6ssbAD&bih=625&biw=1366`\r\n    return (\r\n        <div className = 'emoji'>\r\n            <span className='emoji_row'>Emoji</span>\r\n            <span className='emoji_result' title={`See more pictures of ${props.word}`}>\r\n                <a  href = {picUrl} target = '_blank' rel=\"noreferrer\"> \r\n                    {props.emoji}\r\n                </a>\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emoji;","import './Definitions.css'\r\nimport { ResultType } from \"../../../../Interfaces/Interfaces\";\r\nimport Definition from \"./Definition/Definitioin\";\r\nimport Example from \"./Example/Example\";\r\nimport Photo from \"./Photo/Photo\";\r\nimport Type from \"./Type/Type\";\r\nimport Emoji from \"./Emoji/Emoji\";\r\nimport { connect } from 'react-redux';\r\n\r\nconst Definitions = (props:any) => {\r\n    return (\r\n        <div >\r\n            {props.result.definitions?.map((vocab : ResultType , index : number)=>{\r\n                return  <div className='definitions' key = {index} >\r\n                            <Type type={vocab.type}/>\r\n                            <Definition definition={vocab.definition}/>                                     \r\n                            {vocab.example &&<Example example={vocab.example}/>}  \r\n                            {vocab.emoji && <Emoji emoji={vocab.emoji} word={props.result.word}/>}\r\n                            {vocab.image_url &&<Photo url={vocab.image_url} alt={props.result.word}/>}          \r\n                        </div>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    return {\r\n        result: state.result,\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(Definitions);\r\n  \r\n\r\n","import { connect } from 'react-redux'\r\nimport './pronunciation.css'\r\nconst Pronunciation = (props:any) => {\r\n    return(\r\n        <div className='pronunciation'>\r\n            <span className='pronunciation_row'>\r\n                Pronunciation\r\n            </span> \r\n            <span className='pronunciation_result'>\r\n                {props.result.pronunciation}\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    return {\r\n        result: state.result,\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps)(Pronunciation);","import './Tooltip.css';\r\nconst Tooltip = (props:any) => {\r\n    return (\r\n        <a id='tooltip' onClick={props.LookUp} title='Look it up in the dictionary'>\r\n            Go\r\n        </a>\r\n    )\r\n}\r\nexport default Tooltip;","\r\n  const cliclLookub = (props:any,event:any) => {\r\n    let left = 0;\r\n    let top = 0;\r\n    let selectedText:any\r\n    let tooltipBtn = document.getElementById('tooltip')\r\n    selectedText = getSelection()!.getRangeAt(0).toString();\r\n    selectedText = selectedText.replace(/[\\W_]/g,\"\")  \r\n    if(selectedText.length>0)props.setInput(selectedText)\r\n    if(event.type === 'touchend'){\r\n      left = event.changedTouches[0].pageX\r\n      top = event.changedTouches[0].pageY\r\n      console.log(left,top);\r\n      if(tooltipBtn && selectedText.length>0){        \r\n        tooltipBtn.style.left = left-20+'px'\r\n        tooltipBtn.style.top = top-60+'px'\r\n        tooltipBtn.style.display = 'inline'\r\n      }\r\n    }\r\n    if(event.type === 'mouseup'){\r\n\r\n      left = event?.pageX\r\n      top = event?.pageY      \r\n      tooltipBtn!.style.left = left-15+'px'\r\n      tooltipBtn!.style.top = top-50+'px'\r\n      tooltipBtn!.style.display = 'inline'\r\n\r\n    }\r\n    \r\n    if(selectedText.length ===0 && tooltipBtn) return tooltipBtn!.style.display = 'none'\r\n    \r\n  }\r\n  export default cliclLookub;","import './Result.css'\r\nimport Definitions from './Definitions/Definitions';\r\nimport Pronunciation from './Pronunciation/Pronunciation';\r\nimport Tooltip from './Tooltip/Tooltip';\r\nimport cliclLookub from './CliclLookub/CliclLookub';\r\nimport { connect } from 'react-redux';\r\nimport LookUp from '../../Header/LookUp/LookUp';\r\n\r\nconst Result : React.FC = (props:any) => {\r\n    return ( \r\n            <div className = 'result' data-testid=\"result\" \r\n            onMouseUp = {(event)=>cliclLookub(props,event)}\r\n            onTouchEnd={(event)=>cliclLookub(props,event)}\r\n            >\r\n                <Tooltip  LookUp={()=>LookUp(props)}/>\r\n                {props.result.pronunciation &&<Pronunciation/>}\r\n                <Definitions/>\r\n            </div>\r\n     );\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    return {\r\n        result: state.result,\r\n        welcome: state.welcome,\r\n        input : state.input,\r\n        loading:state.loading,\r\n        getData : state.getData,\r\n        noResult:state.noResult,\r\n        err:state.err,\r\n    }\r\n  }\r\n  const mapDispatchProps = (dispatch:any) => {\r\n    return {\r\n      setWelcome : (welcome:boolean) => dispatch({type:'WELCOME',welcome}),\r\n      setGetData : (getData:boolean) => dispatch({type:'GET_DATA',getData}),\r\n      setInput : (input:string) => dispatch({type:'INPUT',input}),\r\n      setResult : (result:string) =>dispatch({type:'RESULT',result}),\r\n      setLoading : (loading:boolean) => dispatch({type:'LOADING',loading}),\r\n      setNoResult : (noResult:boolean) => dispatch({type:'NO_RESULT',noResult}),\r\n      setErr : (err:boolean) => dispatch({type:'ERR',err})\r\n    }\r\n  }\r\nexport default connect(mapStateToProps, mapDispatchProps)(Result);\r\n  \r\n","import './Spinner.css'\r\n// import {ResultObj} from '../Interfaces/Interfaces'\r\n// type Props = {\r\n//     loading: boolean;\r\n//     getData: boolean;\r\n//     noResult: boolean;\r\n//     input: string;\r\n//     err:boolean;\r\n// }  \r\n// instead of props as a parameter  we can write : {loading, getData, input}\r\nconst Spinner : React.FC = () => {\r\n    return ( \r\n          <div className=\"loader\">\r\n            Loading...\r\n          </div>         \r\n    );\r\n}\r\n\r\nexport default Spinner;\r\n","import './Welcome.css'\r\nconst Welcome = () =>{\r\n    return (\r\n        <div className='welcome'>\r\n            <h4>Welcome to Rumiani Dictionary</h4>\r\n            <br/>\r\n            This is an English to English Dictionary \r\n            using <strong>owlbot</strong> API. built with \r\n            React & Redux, TypeScript and Jest. \r\n            <ul>\r\n                <li>\r\n                Enter a word in the input box then hit the enter or Go button.\r\n                </li>\r\n                <li>\r\n                Click on each emoji or picture in the result to see more imojis or pictures in a new tab.\r\n                </li>\r\n                <li>\r\n                    In the result, highlight a word to see a go button which by hitting it you will be looking up in the dictionary.\r\n                    Don't worry about non-alphabetic characters at the end or begenning of a word. We will get rid of them for you.\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import './Main.css'\r\nimport { connect } from \"react-redux\";\r\nimport Error from \"./Error/Error\";\r\nimport NoResult from \"./NoResult/NoResult\";\r\nimport Result from \"./Result/Result\";\r\nimport Spinner from \"./Spinner/Spinner\";\r\nimport Welcome from \"./Welcome/Welcome\";\r\n\r\nconst Main = (props:any) => {\r\n    return (\r\n            <div className='main' >\r\n                {props.welcome && <Welcome/>}\r\n                {props.getData && <Result/>}\r\n                {props.loading && <Spinner/>}\r\n                {props.noResult && <NoResult/>}\r\n                {props.err && <Error/>}\r\n            </div>\r\n    )\r\n}\r\nconst mapStateToProps = (state:any) => {  \r\n    return {\r\n        welcome: state.welcome,\r\n        loading:state.loading,\r\n        getData : state.getData,\r\n        noResult:state.noResult,\r\n        err:state.err\r\n    }\r\n  }\r\nexport default connect(mapStateToProps)(Main);","import './App.css';\nimport Header from './components/Header/Header';\nimport Main from './components/Main/Main';\n// var Owlbot = require('owlbot-js');\n// var client = Owlbot('03bc50f819a9f19c4d4946a3e0813f87179dc74f');\nconst App = ()=> {\n  return ( \n      <div className = 'App'>\n        <Header/>\n        <Main/>\n      </div>\n     );\n}\nexport default App;\n","const initState = {\r\n    welcome:true,\r\n    input:'',\r\n    result:[],\r\n    getData: false,\r\n    loading:false,\r\n    noResult:false,\r\n    err:false\r\n}\r\nconst RootReducer = (state = initState, action:any) => {\r\n\r\n    switch (action.type) {\r\n        case 'WELCOME':\r\n            return { ...state, welcome:action.welcome }    \r\n        case 'GET_DATA':\r\n            return { ...state, getData:action.getData }    \r\n        case 'INPUT':\r\n            return { ...state, input:action.input }    \r\n        case 'RESULT':\r\n            return { ...state, result:action.result }    \r\n        case 'LOADING':\r\n            return { ...state, loading:action.loading }    \r\n        case 'NO_RESULT':\r\n            return { ...state, noResult:action.noResult }     \r\n        case 'ERR':\r\n            return { ...state, err:action.err }    \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default RootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport RootReducer from './Reducer/RootReducer';\n\nconst store = createStore(RootReducer)\n\nReactDOM.render(\n  <Provider store = {store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}